{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled7.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyMbz7Zq1WZBrWWrNuavLa2T",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jnsbrdbr/andrew-ng/blob/master/logesticregressionipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hI76k2IOT6x-",
        "outputId": "b8a3b8d1-1c60-408f-cb6d-64c29103acb0"
      },
      "source": [
        "# Install TensorFlow\n",
        "# !pip install -q tensorflow-gpu==2.0.0-beta1\n",
        "\n",
        "try:\n",
        "  %tensorflow_version 2.x  # Colab only.\n",
        "except Exception:\n",
        "  pass\n",
        "\n",
        "import tensorflow as tf\n",
        "print(tf.__version__)"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "`%tensorflow_version` only switches the major version: 1.x or 2.x.\n",
            "You set: `2.x  # Colab only.`. This will be interpreted as: `2.x`.\n",
            "\n",
            "\n",
            "TensorFlow 2.x selected.\n",
            "2.7.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fp2h7WRXEiCW"
      },
      "source": [
        "import os\n",
        "\n",
        "# Scientific and vector computation for python\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import io\n",
        "import seaborn as sns\n",
        "\n",
        "# Plotting library\n",
        "from matplotlib import pyplot\n",
        "from mpl_toolkits.mplot3d import Axes3D  # needed to plot 3-D surfaces\n",
        "import matplotlib.pyplot as plt"
      ],
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RkWhtGtbJNoi",
        "outputId": "727aa041-cfbb-419e-e2f5-99d35700349c"
      },
      "source": [
        "!wget https://raw.githubusercontent.com/susilvaalmeida/machine-learning-andrew-ng/master/data/ex2data1.txt\n",
        "\n",
        "data = pd.read_csv('ex2data1.txt',header=None,error_bad_lines=False, delimiter=',')"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2021-11-11 09:24:18--  https://raw.githubusercontent.com/susilvaalmeida/machine-learning-andrew-ng/master/data/ex2data1.txt\n",
            "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.109.133, 185.199.108.133, ...\n",
            "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 3775 (3.7K) [text/plain]\n",
            "Saving to: ‘ex2data1.txt.6’\n",
            "\n",
            "\rex2data1.txt.6        0%[                    ]       0  --.-KB/s               \rex2data1.txt.6      100%[===================>]   3.69K  --.-KB/s    in 0s      \n",
            "\n",
            "2021-11-11 09:24:18 (41.9 MB/s) - ‘ex2data1.txt.6’ saved [3775/3775]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "FR-pg51yRMww",
        "outputId": "71003a6b-a4a9-4aa6-de80-68c489d93e74"
      },
      "source": [
        "#show the data\n",
        "data.columns=['exam_score1','exam_score2','label']\n",
        "data.describe().T\n"
      ],
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>exam_score1</th>\n",
              "      <td>100.0</td>\n",
              "      <td>65.644274</td>\n",
              "      <td>19.458222</td>\n",
              "      <td>30.058822</td>\n",
              "      <td>50.919511</td>\n",
              "      <td>67.032988</td>\n",
              "      <td>80.212529</td>\n",
              "      <td>99.827858</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>exam_score2</th>\n",
              "      <td>100.0</td>\n",
              "      <td>66.221998</td>\n",
              "      <td>18.582783</td>\n",
              "      <td>30.603263</td>\n",
              "      <td>48.179205</td>\n",
              "      <td>67.682381</td>\n",
              "      <td>79.360605</td>\n",
              "      <td>98.869436</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>label</th>\n",
              "      <td>100.0</td>\n",
              "      <td>0.600000</td>\n",
              "      <td>0.492366</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             count       mean        std  ...        50%        75%        max\n",
              "exam_score1  100.0  65.644274  19.458222  ...  67.032988  80.212529  99.827858\n",
              "exam_score2  100.0  66.221998  18.582783  ...  67.682381  79.360605  98.869436\n",
              "label        100.0   0.600000   0.492366  ...   1.000000   1.000000   1.000000\n",
              "\n",
              "[3 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 351
        },
        "id": "IEFjZJxgRcT0",
        "outputId": "a25aa0e4-e767-4061-88c9-227841a89304"
      },
      "source": [
        "#plot the data\n",
        "#1.size\n",
        "#2.detemine x,y summon data\n",
        "plt.figure(figsize=(7,5))\n",
        "ax=sns.scatterplot(x='exam_score1',y='exam_score2',hue='label',style='label',data=data,s=80)\n",
        "handles,labels=ax.get_legend_handles_labels()\n",
        "ax.legend(handles[0:], ['Not admitted', 'Admitted'])\n",
        "plt.title('Scatter plot of training data')\n",
        "plt.show()"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 504x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eadfTSgchc7X"
      },
      "source": [
        "#warmupexercise:sigmoid\n",
        "def sigmoid(z):\n",
        "  z=np.array(z)\n",
        "  return 1/(1+np.exp(-z))"
      ],
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 225
        },
        "id": "1B6EIil0iGJc",
        "outputId": "38f41146-00dc-496c-884f-cdc365531cd5"
      },
      "source": [
        "#plot sigmoid\n",
        "z = np.linspace(-10, 10, 1000)\n",
        "sig = sigmoid(z)\n",
        "plt.figure(figsize=(9, 3))\n",
        "plt.plot([-10, 10], [0, 0], \"k-\")\n",
        "plt.plot([-10, 10], [0.5, 0.5], \"k:\")\n",
        "plt.plot([-10, 10], [1, 1], \"k:\")\n",
        "plt.plot([0, 0], [-1.1, 1.1], \"k-\")\n",
        "plt.plot(z, sig, \"r-\", linewidth=2)\n",
        "plt.xlabel(\"z\")\n",
        "plt.axis([-10, 10, -0.1, 1.1])\n",
        "plt.show()"
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 648x216 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "p1m9AFYKp6wJ"
      },
      "source": [
        "def computecost(theta,x,y):\n",
        "  m=data.shape[0]\n",
        "  theta = theta[:, np.newaxis]\n",
        "  h=sigmoid(x.dot(theta))\n",
        "  j=(1/m) * (-y.T.dot(np.log(h))- (1-y).T.dot(np.log(1-h)))\n",
        "  diff_hy = h - y\n",
        "  grad= (1/m) * diff_hy.T.dot(x)\n",
        "  return j,grad"
      ],
      "execution_count": 92,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u5YQaQDYvyg5",
        "outputId": "11cbd33b-00fa-4049-a1d6-1da9dfc1776a"
      },
      "source": [
        "m = data.shape[0]\n",
        "x = np.hstack((np.ones((m,1)),data[['exam_score1', 'exam_score2']].values))\n",
        "y = np.array(data.label.values).reshape(-1,1)\n",
        "theta1 = np.zeros(shape=(data.shape[1]))\n",
        "print(theta1)"
      ],
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0. 0. 0.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b2jLth1X1Rs2",
        "outputId": "88364cdc-4d01-43dd-b2c7-fa8f51ddbf27"
      },
      "source": [
        "cost,grad=computecost(theta1,x,y)\n",
        "print('Cost at initial theta (zeros):', cost)\n",
        "print('Expected cost (approx): 0.693')\n",
        "print('Gradient at initial theta (zeros):')\n",
        "print(grad.T)"
      ],
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cost at initial theta (zeros): [[0.69314718]]\n",
            "Expected cost (approx): 0.693\n",
            "Gradient at initial theta (zeros):\n",
            "[[ -0.1       ]\n",
            " [-12.00921659]\n",
            " [-11.26284221]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZhI9MJe43il7"
      },
      "source": [
        "import scipy.optimize as opt\n",
        "def optimize_theta(x,y,theta1):\n",
        "  opt_result=opt.minimize(computecost, theta1, args=(x, y), method='TNC',\n",
        "                               jac=True, options={'maxiter':400})\n",
        "  return opt_result['x'], opt_result['fun']"
      ],
      "execution_count": 100,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vmBz6FfQ4eeo"
      },
      "source": [
        "opt_theta, cost = optimize_theta(x, y, theta1)"
      ],
      "execution_count": 101,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "69RFqpDI4Wtk",
        "outputId": "91b7052d-1b1f-476d-ec1e-e1cd2cd8ec1e"
      },
      "source": [
        "print('Cost at theta found by fminunc:', cost)\n",
        "print('Expected cost (approx): 0.203')\n",
        "print('theta:\\n', opt_theta.reshape(-1,1))\n",
        "print('Expected theta (approx):')\n",
        "print(' -25.161\\n 0.206\\n 0.201')"
      ],
      "execution_count": 102,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cost at theta found by fminunc: [[0.2034977]]\n",
            "Expected cost (approx): 0.203\n",
            "theta:\n",
            " [[-25.16131865]\n",
            " [  0.20623159]\n",
            " [  0.20147149]]\n",
            "Expected theta (approx):\n",
            " -25.161\n",
            " 0.206\n",
            " 0.201\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 351
        },
        "id": "TknFE3c26Ev3",
        "outputId": "eb01a609-f392-4095-c41f-1ae4f9653c9d"
      },
      "source": [
        "plt.figure(figsize=(7,5))\n",
        "ax = sns.scatterplot(x='exam_score1', y='exam_score2', hue='label', data=data, style='label', s=80)\n",
        "handles, labels = ax.get_legend_handles_labels()\n",
        "ax.legend(handles[1:], ['Not admitted', 'Admitted'])\n",
        "plt.title('Training data with decision boundary')\n",
        "\n",
        "plot_x = np.array([min(x[:,2])-2,  max(x[:,2])+2])\n",
        "plot_y = -((opt_theta[1]/opt_theta[2])*plot_x + (opt_theta[0]/opt_theta[2]))\n",
        "plt.plot(plot_x, plot_y, '-', c=\"green\")\n",
        "plt.show(ax)"
      ],
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 504x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5We9p-AmEW-W",
        "outputId": "ee173b15-e026-4894-80cf-e4daf62149ff"
      },
      "source": [
        "#probability\n",
        "prob = sigmoid(np.array([1, 45, 85]).dot(opt_theta))\n",
        "print('For a student with scores 45 and 85, we predict an admission probability of', prob)\n",
        "print('Expected value: 0.775 +/- 0.002');"
      ],
      "execution_count": 106,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "For a student with scores 45 and 85, we predict an admission probability of 0.7762906229081791\n",
            "Expected value: 0.775 +/- 0.002\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dzFjXvAaHnvY"
      },
      "source": [
        "def predict(X,theta):\n",
        "  y_pred = [1 if sigmoid(X[i, :].dot(theta)) >= 0.5 else 0 for i in range(0, X.shape[0])]\n",
        "  return y_pred\n",
        " "
      ],
      "execution_count": 119,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "0eeg_0a2IbPH",
        "outputId": "90146ea5-16e3-484a-eb1d-003201a34894"
      },
      "source": [
        "X = np.hstack((np.ones((m,1)),data[['exam_score1', 'exam_score2']].values))\n",
        "y_pred_prob = predict(X, opt_theta)\n",
        "f'Train accuracy: {np.mean(y_pred_prob == data.label.values) * 100}'"
      ],
      "execution_count": 113,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'Train accuracy: 89.0'"
            ]
          },
          "metadata": {},
          "execution_count": 113
        }
      ]
    }
  ]
}